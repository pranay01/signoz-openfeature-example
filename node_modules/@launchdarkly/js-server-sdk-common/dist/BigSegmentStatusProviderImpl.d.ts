import { BigSegmentStoreStatus, BigSegmentStoreStatusProvider } from './api/interfaces';
/**
 * @ignore
 */
export default class BigSegmentStoreStatusProviderImpl implements BigSegmentStoreStatusProvider {
    private readonly onRequestStatus;
    private lastStatus;
    private listener?;
    constructor(onRequestStatus: () => Promise<void>);
    /**
     * Gets the current status of the store, if known.
     *
     * @returns a {@link BigSegmentStoreStatus}, or `undefined` if the SDK has not yet queried the
     *   Big Segment store status
     */
    getStatus(): BigSegmentStoreStatus | undefined;
    /**
     * Gets the current status of the store, querying it if the status has not already been queried.
     *
     * @returns a Promise for the status of the store
     */
    requireStatus(): Promise<BigSegmentStoreStatus>;
    notify(): void;
    setListener(listener: (status: BigSegmentStoreStatus) => void): void;
    setStatus(status: BigSegmentStoreStatus): void;
}
//# sourceMappingURL=BigSegmentStatusProviderImpl.d.ts.map